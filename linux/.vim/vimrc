	" Plugins
	" Vim-Plug Auto Installer
		if empty(glob('~/.vim/autoload/plug.vim'))
		  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
		      \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
		    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
		    endif

	call plug#begin('~/.vim/plugged')

	" Plugins
	" Plug 'mattn/emmet-vim'
	" Plug 'vim-airline/vim-airline'
	" Plug 'vim-airline/vim-airline-themes'

	Plug 'airblade/vim-gitgutter'
	Plug 'tpope/vim-commentary'
	Plug 'tpope/vim-surround'
	Plug 'tpope/vim-fugitive'
	Plug 'tpope/vim-unimpaired'
	Plug 'vimwiki/vimwiki'
	Plug 'dhruvasagar/vim-table-mode'
	Plug 'preservim/nerdtree'
	Plug 'junegunn/fzf'
	Plug 'junegunn/fzf.vim'

	" Color Schemes
	" Plug 'dracula/vim'
	" Plug 'zefei/simple-dark'
	" Plug 'ParamagicDev/vim-medic_chalk'
	" Plug 'atahabaki/archman-vim'
	" Plug 'tomasr/molokai'
	" Plug 'morhetz/gruvbox'
	Plug 'tomasiser/vim-code-dark'

	call plug#end()

" Configs
	set nocompatible
	filetype plugin on
	syntax on

	set number
	set relativenumber
	set cursorline
	set showcmd
	set linebreak
	set autochdir
	set autoread
	set mouse=a
	set shell=bash
	set updatetime=100
	set viminfofile=~/.vim/viminfo
	set wildmode=longest,list,full
	set ttimeoutlen=10

	color codedark
	" set background=light
	set background=dark

	" Filetype configs
	autocmd BufNewFile,BufRead *.xxd set syntax=xxd
	autocmd BufNewFile,BufRead vifmrc set filetype=vim

	" Mapping leader key
	let mapleader = "\<Space>"

	" Disable newline comment
	autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

	"Auto-source vimrc on change
	autocmd! BufWritePost $MYVIMRC source % | echom "Reloaded " . $MYVIMRC | redraw
	autocmd! BufWritePost $MYGVIMRC if has('gui_running') | so % | echom "Reloaded " . $MYGVIMRC | endif | redraw

" Plugin Configs
	" GitGutter
	highlight GitGutterAdd guifg=#009900 ctermfg=Green
	highlight GitGutterChange guifg=#bbbb00 ctermfg=Yellow
	highlight GitGutterDelete guifg=#ff2222 ctermfg=Red
	let g:gitgutter_enable = 1

	" Vimwiki	
	let g:vimwiki_list = [{'path':'~/vimwiki'}]

" Remaps
	nnoremap <leader>sh :bot terminal<cr>

	" External programs
	nnoremap <leader>lg :!lazygit<cr><cr>
	nnoremap <leader>vd :!vidir<cr><cr>

	" Shell on line
	nnoremap <leader>sd :.!date<cr>
	nnoremap <leader>sbb :.!base64<cr>
	nnoremap <leader>sbd :.!base64 -d<cr>

	" Make
	nnoremap <leader>mm :w<cr>:!make<cr><cr>
	nnoremap <leader>mi :w<cr>:!sudo make install<cr><cr>
	nnoremap <leader>mc :w<cr>:!make clean<cr><cr>
	nnoremap <leader>mu :w<cr>:!sudo make uninstall<cr><cr>

	" Emmet-vim
	nmap <leader>ee <c-y>,

	" vim-fugitive
	nnoremap <leader>g :G<cr>

	" FZF
	nnoremap <leader>ff :Files<cr>
	nnoremap <leader>fg :GFiles<cr>
	nnoremap <leader>fG :GFiles?<cr>
	nnoremap <leader>fl :BLines<cr>
	nnoremap <leader>fb :Buffers<cr>
	nnoremap <leader>fF :Filetypes<cr>
	nnoremap <leader>fm :Maps<cr>
	nnoremap <leader>fc :Commands<cr>
	nnoremap <leader>fC :Colors<cr>
	nnoremap <leader>fw :Windows<cr>

	" NERDTree
	nnoremap <leader>nn :NERDTreeToggle<cr>
	nnoremap <leader>ng :NERDTreeToggleVCS<cr>

	" Opening files
	nnoremap ,c :tabnew $MYVIMRC<cr>
	
	" Better split navigation
	nnoremap <c-h> <c-w>h
	nnoremap <c-j> <c-w>j
	nnoremap <c-k> <c-w>k
	nnoremap <c-l> <c-w>l
